@using TourOperator.Extensions
@using TourOperator.Models.Entities
@model TourOperator.Models.Entities.Report?

@{
    ViewData["Title"] = "Report";

    DateTime fromDate;
    DateTime toDate;
    DateTime now = DateTime.Now;
    
    if (Model != null){
        // There is a report that has been generated.
        
        fromDate = Model.FromDate;
        toDate = Model.ToDate;
    }
    else{
        fromDate = now;
        toDate = now;
    }

    void PrintRoomAvailability(Report.Availability<Room>? roomAvailability)
    {
        // Print availability of all rooms on a date
        
        if (roomAvailability != null) {
            <p>Rooms:</p>
            <ul>
                @foreach(var availability in roomAvailability){
                    <li>
                        @availability.Key.Hotel.Name @@ @availability.Key.Name => @availability.Value places
                    </li>
                }
            </ul>
        }
    }
    
    void PrintTourAvailability(Report.Availability<Tour>? tourAvailability)
    {
        // Print availability of all tours on a date
        
        if (tourAvailability != null) {
            <p>Tours:</p>
            <ul>
                @foreach(var availability in tourAvailability){
                    <li>
                        @availability.Key.Name => @availability.Value places
                    </li>
                }
            </ul>
        }
    }
}

<div class="text-center">
    <h1 class="display-4">Report</h1>
    
    @using (Html.BeginForm("GenerateReport", "View", FormMethod.Post))
    {
        <label for="from">From</label>
        <input type="date" name="FromDate" id="from" class="form-control" value="@fromDate.ToShortDate()" min="@now.ToShortDate()"/>
        
        <label for="to">To</label>
        <input type="date" name="ToDate" id="to" class="form-control" value="@toDate.ToShortDate()" min="@now.ToShortDate()" />
        
        <button type="submit" class="btn btn-primary">Generate</button>
    }
    
    @if (Model != null){
        
        <table>
            <tr>
                <th>Date</th>
                <th>Bookings</th>
            </tr>
            
            @if (Model.BookingsByDate != null){
                foreach(var bookings in Model.BookingsByDate) {
                    <tr>
                        <td>
                            @bookings.Key.ToShortDate()
                        </td>

                        <td>
                            @if (bookings.Value.Any()){
                                <p>Bookings:</p>
                                
                                <ul>
                                    @foreach(var booking in bookings.Value){
                                        // Show each booking for the date
                                        
                                        if (booking.HasTour()){
                                            <li>@booking.TourBooking?.Tour.Name</li>
                                        }
                                                
                                        if (booking.HasRoom()){
                                            <li>@booking.RoomBooking?.Room.Hotel.Name at @booking.RoomBooking?.Room.Name</li>
                                        }
                                    }
                                </ul>

                                {
                                    if (Model.DefaultRoomAvailability != null && Model.DefaultTourAvailability != null){
                                        Report.Availability<Room> roomAvailability = Model.DefaultRoomAvailability.Duplicate();
                                        Report.Availability<Tour> tourAvailability = Model.DefaultTourAvailability.Duplicate();

                                        // Calculate remaining availability by subtracting this date's bookings from the default
                                        // availability.

                                        foreach(var booking in bookings.Value){
                                            if (booking.HasTour()){
                                                tourAvailability[booking.TourBooking!.Tour] -= 1;
                                            }

                                            if (booking.HasRoom()){
                                                roomAvailability[booking.RoomBooking!.Room] -= 1;
                                            }
                                        }

                                        PrintRoomAvailability(roomAvailability);
                                        PrintTourAvailability(tourAvailability);
                                    }
                                }
                            }
                            else{
                                PrintRoomAvailability(Model.DefaultRoomAvailability);
                                PrintTourAvailability(Model.DefaultTourAvailability);
                            }
                        </td>
                    </tr>
                }
            }
    </table>
    }
</div>